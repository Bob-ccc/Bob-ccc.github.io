{"version":3,"sources":["webpack:///./src/views/Forgot.vue?3f84","webpack:///src/views/Forgot.vue","webpack:///./src/views/Forgot.vue?beb7","webpack:///./src/views/Forgot.vue","webpack:///./src/assets/js/validForm.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","back","_m","model","value","userInfo","callback","$$v","$set","expression","isPassword","viewPassword","scopedSlots","_u","key","fn","isSend","sendValidCode","_v","_s","text","proxy","$event","goPage","commit","staticRenderFns","data","phone","password","email","validCode","methods","$router","go","push","time","clearInterval","timer","$toast","loading","message","forbidClick","duration","loadingType","appkey","axios","method","url","type","result","msg","reg","errorMsg","validForm","code","updatePassword","component","Vue","use","ValidForm","o","test"],"mappings":"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","file":"js/chunk-e7feee38.aaf77d08.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"forgot-box\"},[_c('div',{staticClass:\"login-box\"},[_c('van-nav-bar',{attrs:{\"fixed\":\"\",\"title\":\"订单中心\",\"left-text\":\"返回\",\"left-arrow\":\"\"},on:{\"click-left\":_vm.back}}),_c('div',{staticClass:\"login-form\"},[_vm._m(0),_c('van-form',[_c('van-field',{attrs:{\"placeholder\":\"手机号\"},model:{value:(_vm.userInfo.phone),callback:function ($$v) {_vm.$set(_vm.userInfo, \"phone\", $$v)},expression:\"userInfo.phone\"}}),_c('van-field',{attrs:{\"placeholder\":\"密码\",\"type\":_vm.isPassword ? 'password' : 'text',\"right-icon\":_vm.isPassword ? 'closed-eye' : 'eye-o'},on:{\"click-right-icon\":_vm.viewPassword},model:{value:(_vm.userInfo.password),callback:function ($$v) {_vm.$set(_vm.userInfo, \"password\", $$v)},expression:\"userInfo.password\"}}),_c('van-field',{attrs:{\"placeholder\":\"邮箱\"},model:{value:(_vm.userInfo.email),callback:function ($$v) {_vm.$set(_vm.userInfo, \"email\", $$v)},expression:\"userInfo.email\"}}),_c('van-field',{attrs:{\"center\":\"\",\"clearable\":\"\",\"placeholder\":\"请输入邮箱验证码\"},scopedSlots:_vm._u([{key:\"button\",fn:function(){return [_c('van-button',{attrs:{\"size\":\"small\",\"color\":\"#0C34BA\",\"disabled\":_vm.isSend},on:{\"click\":_vm.sendValidCode}},[_vm._v(_vm._s(_vm.text))])]},proxy:true}]),model:{value:(_vm.userInfo.validCode),callback:function ($$v) {_vm.$set(_vm.userInfo, \"validCode\", $$v)},expression:\"userInfo.validCode\"}}),_c('div',{staticClass:\"clearfix forgot\"},[_c('span',{staticClass:\"fr\",on:{\"click\":function($event){return _vm.goPage('Login')}}},[_vm._v(\"已有账号，立即登录\")])]),_c('div',{staticClass:\"login-btn\"},[_c('van-button',{attrs:{\"round\":\"\",\"block\":\"\",\"native-type\":\"submit\",\"color\":\"#0C34BA\"},on:{\"click\":_vm.commit}},[_vm._v(\"提 交\")])],1)],1)],1)],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"form-title\"},[_c('h3',[_vm._v(\"欢迎回来！\")]),_c('p',[_vm._v(\" Please login to your accounts \")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"forgot-box\">\r\n    <div class=\"login-box\">\r\n      <van-nav-bar fixed title=\"订单中心\" left-text=\"返回\" left-arrow @click-left=\"back\" />\r\n      <div class=\"login-form\">\r\n        <div class=\"form-title\">\r\n          <h3>欢迎回来！</h3>\r\n          <p>\r\n            Please login to your\r\n            accounts\r\n          </p>\r\n        </div>\r\n\r\n        <van-form>\r\n          <van-field placeholder=\"手机号\" v-model=\"userInfo.phone\" />\r\n\r\n          <van-field\r\n            placeholder=\"密码\"\r\n            v-model=\"userInfo.password\"\r\n            :type=\"isPassword ? 'password' : 'text'\"\r\n            :right-icon=\"isPassword ? 'closed-eye' : 'eye-o'\"\r\n            @click-right-icon=\"viewPassword\"\r\n          />\r\n\r\n          <van-field placeholder=\"邮箱\" v-model=\"userInfo.email\" />\r\n\r\n          <van-field\r\n            v-model=\"userInfo.validCode\"\r\n            center\r\n            clearable\r\n            placeholder=\"请输入邮箱验证码\"\r\n          >\r\n            <template #button>\r\n              <van-button\r\n                size=\"small\"\r\n                color=\"#0C34BA\"\r\n                :disabled=\"isSend\"\r\n                @click=\"sendValidCode\"\r\n              >{{text}}</van-button>\r\n            </template>\r\n          </van-field>\r\n\r\n          <div class=\"clearfix forgot\">\r\n            <span class=\"fr\" @click=\"goPage('Login')\">已有账号，立即登录</span>\r\n          </div>\r\n\r\n          <div class=\"login-btn\">\r\n            <van-button\r\n              round\r\n              block\r\n              native-type=\"submit\"\r\n              color=\"#0C34BA\"\r\n              @click=\"commit\"\r\n            >提&nbsp;&nbsp;交</van-button>\r\n          </div>\r\n        </van-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"../assets/css/forgot.less\";\r\nimport { utils } from \"../assets/js/utils\";\r\nimport { validForm } from \"../assets/js/validForm\";\r\nexport default {\r\n  data() {\r\n    return {\r\n        \r\n      isPassword: true,\r\n      userInfo: {\r\n        phone: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        validCode: \"\",\r\n      },\r\n      text: '发送验证码',\r\n      isSend: false\r\n    };\r\n  },\r\n  methods: {\r\n    back() {\r\n      this.$router.go(-1);\r\n    },\r\n\r\n    goPage(name) {\r\n      this.$router.push({ name });\r\n    },\r\n\r\n    //查看密码\r\n    viewPassword() {\r\n      this.isPassword = !this.isPassword;\r\n    },\r\n\r\n    //发送验证码\r\n    sendValidCode() {\r\n      let time = 5;\r\n      this.text = time + 's后重新发送';\r\n      this.isSend = true;\r\n\r\n      let timer = setInterval(() => {\r\n        if (time == 0) {\r\n          clearInterval(timer);\r\n          this.isSend = false;\r\n          this.text = '发送验证码';\r\n        } else {\r\n          time--;\r\n          this.text = time + 's后重新发送';\r\n        }\r\n      }, 1000)\r\n\r\n      //发起获取邮箱验证码请求\r\n      //验证通过\r\n      this.$toast.loading({\r\n        message: '加载中...',\r\n        forbidClick: true,\r\n        duration: 0,\r\n        loadingType: 'spinner'\r\n      })\r\n\r\n      //参数序列化\r\n      let data = utils.queryString({\r\n        email: this.userInfo.email,\r\n        appkey: this.appkey\r\n      });\r\n\r\n      this.axios({\r\n        method: 'POST',\r\n        url: '/emailValidCode',\r\n        data\r\n      }).then(result => {\r\n        this.$toast.clear();\r\n         \r\n\r\n        this.$notify({\r\n          type: 'warning', \r\n          message: result.data.msg\r\n        })\r\n      }).catch(err => {\r\n        this.$toast.clear();\r\n         \r\n      })\r\n    },\r\n\r\n    //提交\r\n    commit() {\r\n\r\n      //验证修改密码表单\r\n      let o = {\r\n        phone: {\r\n          value: this.userInfo.phone,\r\n          reg: /^1[3-9]\\d{9}$/,\r\n          errorMsg: '手机号格式不正确'\r\n        },\r\n        password: {\r\n          value: this.userInfo.password,\r\n          reg: /^[A-Za-z]\\w{5,15}$/,\r\n          errorMsg: '密码支持字母数字_组合'\r\n        },\r\n        email: {\r\n          value: this.userInfo.email,\r\n          reg: /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/,\r\n          errorMsg: '邮箱格式不正确'\r\n        },\r\n        validCode: {\r\n          value: this.userInfo.validCode,\r\n          reg: /^\\d{6}$/,\r\n          errorMsg: '验证为6位数字'\r\n        }\r\n      };\r\n\r\n      if (!validForm.valid(o)) {\r\n        //验证不通过\r\n        return;\r\n      }\r\n\r\n      //发起忘记密码请求\r\n       \r\n      this.$toast.loading({\r\n        message: '加载中...',\r\n        forbidClick: true,\r\n        duration: 0,\r\n        loadingType: 'spinner'\r\n      })\r\n\r\n      //参数序列化\r\n      let data = utils.queryString({\r\n        validCode: this.userInfo.validCode,\r\n        appkey: this.appkey\r\n      });\r\n\r\n      this.axios({\r\n        method: 'POST',\r\n        url: '/checkValidCode',\r\n        data\r\n      }).then(result => {\r\n        this.$toast.clear();\r\n         \r\n\r\n        if (result.data.code == 'K001') {\r\n          //验证成功\r\n          this.updatePassword();\r\n\r\n        } else {\r\n          this.$notify({\r\n            type: 'warning', \r\n            message: result.data.msg\r\n          })\r\n        }\r\n      }).catch(err => {\r\n        this.$toast.clear();\r\n         \r\n      })\r\n\r\n    },\r\n\r\n    //修改密码\r\n    updatePassword() {\r\n      this.$toast.loading({\r\n        message: '加载中...',\r\n        forbidClick: true,\r\n        duration: 0,\r\n        loadingType: 'spinner'\r\n      })\r\n\r\n      //参数序列化\r\n      let data = utils.queryString({\r\n        phone: this.userInfo.phone,\r\n        password: this.userInfo.password,\r\n        appkey: this.appkey\r\n      });\r\n\r\n      this.axios({\r\n        method: 'POST',\r\n        url: '/retrievePassword',\r\n        data\r\n      }).then(result => {\r\n        this.$toast.clear();\r\n         \r\n\r\n        if (result.data.code == 'L001') {\r\n          this.$router.push({name: 'Login'});\r\n        } else {\r\n          this.$toast(result.data.msg);\r\n        }\r\n\r\n      }).catch(err => {\r\n        this.$toast.clear();\r\n         \r\n\r\n      })\r\n    }\r\n\r\n\r\n  },\r\n};\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Forgot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Forgot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Forgot.vue?vue&type=template&id=8604e9dc&\"\nimport script from \"./Forgot.vue?vue&type=script&lang=js&\"\nexport * from \"./Forgot.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport { Notify } from 'vant'\r\n// 全局注册\r\nVue.use(Notify)\r\n\r\nclass ValidForm {\r\n\r\n  //验证表单\r\n  valid(o) {\r\n    for (let key in o) {\r\n      if (!o[key].reg.test(o[key].value)) {\r\n        //提示\r\n        Notify({\r\n          type: 'warning', \r\n          message: o[key].errorMsg\r\n        })\r\n        //验证失败\r\n        return false;\r\n      }\r\n    }\r\n\r\n    //验证通过\r\n    return true;\r\n  }\r\n}\r\n\r\nexport const validForm = new ValidForm();"],"sourceRoot":""}